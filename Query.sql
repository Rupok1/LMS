
---------TABLE SPECS--------//LAB-03
DESCRIBE LOGIN;
DESCRIBE ADMIN;
DESCRIBE USERS;
DESCRIBE BOOK;
DESCRIBE ISSUED_BY;
DESCRIBE BOOK_RECORD;

---Displaying all table Values---
SELECT * FROM LOGIN;
SELECT * FROM ADMIN;
SELECT * FROM USERS;
SELECT * FROM BOOK;
SELECT * FROM ISSUED_BY;
SELECT * FROM BOOK_RECORD;


------ALTER,UPDATE,DELETE TABLE BEFORE INSERT-----

ALTER TABLE BOOK_RECORD ADD PUBLISHER VARCHAR(30);
ALTER TABLE BOOK_RECORD DROP COLUMN PUBLISHER;
ALTER TABLE ISSUED_BY MODIFY FINE NUMBER(6);
ALTER TABLE BOOK RENAME COLUMN AUTHOR TO AUTHOR_NAME;
ALTER TABLE BOOK RENAME COLUMN AUTHOR_NAME TO AUTHOR;
UPDATE ISSUED_BY SET ISSUE_DATE='6 JUL,2022' WHERE BOOK_ID= '123-21-27';
DELETE FROM BOOK_RECORD WHERE BOOK_ID = '123-21-31';

-------SELECT QUERY------

SELECT BOOK_TITLE,BOOK_AUTHOR FROM BOOK_RECORD;
SELECT ADMIN_ID,ISSUE_DATE FROM ISSUED_BY WHERE FINE<10;



-----DISTINCT/AS----

SELECT DISTINCT(AUTHOR) FROM BOOK;
SELECT (FINE-3) AS REDUCED_FINE FROM ISSUED_BY;

-------RANGE SEARCH/LIKE-----

SELECT NAME,MOBILE_NO FROM USERS WHERE NO_OF_BOOK_ISSUED BETWEEN 0 AND 3;
SELECT NAME,ADDRESS FROM USERS WHERE NO_OF_BOOK_ISSUED NOT BETWEEN 0 AND 2;
SELECT BOOK_ID FROM ISSUED_BY WHERE FINE>1 AND FINE <=3;
SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED IN(1,2);
SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED NOT IN(1,2);

SELECT NAME,LIBRARY_ID FROM USERS WHERE ADDRESS LIKE '%_k_%';

-----ORDER BY/GROUP BY/HAVING------//LAB-04
SELECT LIBRARY_ID,NAME,MOBILE_NO,NO_OF_BOOK_ISSUED FROM USERS ORDER BY NO_OF_BOOK_ISSUED;
SELECT BOOK_ID ,ADMIN_ID,FINE FROM ISSUED_BY ORDER BY FINE DESC;

-----COMPARISON AND COMPOUND SEARCH-----
SELECT LIBRARY_ID FROM USERS WHERE  ISSUED_FROM = 1807003;
SELECT LIBRARY_ID,NAME FROM USERS WHERE ISSUED_FROM = 1807003 AND ISSUED_FROM = 1807001;
SELECT LIBRARY_ID,NAME FROM USERS WHERE ISSUED_FROM = 1807003 OR ISSUED_FROM = 1807001;

-----AGGREGATE FUNCTIONS-------
SELECT MAX(NO_OF_BOOK_ISSUED) FROM USERS;
SELECT AVG(NO_OF_BOOK_ISSUED) FROM USERS;
SELECT SUM(FINE) FROM ISSUED_BY;
SELECT COUNT(FINE) FROM ISSUED_BY;
SELECT MIN(FINE) FROM ISSUED_BY;


-----GROUP BY/HAVING------

SELECT COUNT(ISSUE_ID),ADMIN_ID FROM ISSUED_BY GROUP BY ADMIN_ID;
SELECT COUNT(ISSUE_ID),ADMIN_ID FROM ISSUED_BY GROUP BY ADMIN_ID HAVING ADMIN_ID = 1807003;


-----SUB QUERY AND SET OPERATIONS----//LAB-05

SELECT BOOK_ID,BOOK_TITLE FROM BOOK_RECORD WHERE  BOOK_ENTRY_DATE IN('1 june,2022','4 jul,2022');
SELECT BOOK_BARCODE_NO FROM BOOK WHERE ISSUE_BY IN (SELECT ISSUE_BY FROM BOOK WHERE TITLE='Database System Concept');


--UNION--@
SELECT NAME FROM USERS WHERE ADDRESS = 'Dhaka' 
      UNION  SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED>=2;


----UNION ALL---@
      SELECT NAME FROM USERS WHERE ADDRESS = 'Dhaka' 
      UNION ALL SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED>=2;


--INTERSECT AND SELECT--@
SELECT NAME FROM USERS WHERE ADDRESS = 'Dhaka' 
      INTERSECT SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED>=2;

---MINUS---@
SELECT NAME FROM USERS WHERE ADDRESS = 'Dhaka' 
      MINUS SELECT NAME FROM USERS WHERE NO_OF_BOOK_ISSUED>=2;


-------JOINING MULTIPLE TABLES-------
SELECT A.NAME, A.PHONE_NO FROM LOGIN L,ADMIN A WHERE L.LOGIN_ID = A.ADMIN_ID;
SELECT A.NAME, A.PHONE_NO FROM LOGIN L JOIN ADMIN A ON L.LOGIN_ID = A.ADMIN_ID;

-- --NATURAL JOIN---@
-- SELECT I.ISSUE_DATE,BR.BOOK_ENTRY_DATE FROM ISSUED_BY I NATURAL JOIN BOOK_RECORD B;
--OR
-- SELECT I.ISSUE_DATE,bR.BOOK_ENTRY_DATE FROM ISSUED_BY I JOIN BOOK_RECORD BR ON BR.BOOK_ID = I.BOOK_ID;
-- SELECT A.NAME,A.PHONE_NO,B.BOOK_TITE,B.BOOK_AUTHOR,B.BOOK_STATUS FROM ADMIN A NATURAL JOIN BOOK_RECORD B;
---USING USING CLAUSE---@
-- SELECT ADMIN.PHONE_NO,ADMIN.ADDRESS BOOK_RECORD.TITLE FROM ADMIN JOIN BOOK_RECORD USING(BOOK_ID);



----CROSS JOIN /CARTESIAN PRODUCTS---@

SELECT ADMIN_ID,LIBRARY_ID FROM ADMIN,USERS;


---INNNER JOIN---@
SELECT U.NAME,U.ADDRESS,B.TITLE,B.AUTHOR FROM USERS U INNER JOIN BOOK B ON U.LIBRARY_ID=B.BORROWED_BY;


---LEFT OUTER JOIN---@
SELECT B.BOOK_TITLE,B.BOOK_STATUS,A.NAME,A.PHONE_NO FROM BOOK_RECORD B 
        LEFT OUTER JOIN ADMIN A ON B.ADMIN_ID = A.ADMIN_ID;

SELECT A.NAME, A.PHONE_NO FROM LOGIN L LEFT OUTER JOIN ADMIN A ON L.LOGIN_ID = A.ADMIN_ID;

---RIGHT OUTRER JOIN---@
SELECT B.BOOK_TITLE,B.BOOK_STATUS,A.NAME,A.PHONE_NO FROM BOOK_RECORD B 
        RIGHT OUTER JOIN ADMIN A ON B.ADMIN_ID = A.ADMIN_ID;


---FULL OUTER JOIN----@
SELECT B.BOOK_TITLE,B.BOOK_STATUS,A.NAME,A.PHONE_NO FROM BOOK_RECORD B
        FULL OUTER JOIN ADMIN A ON B.ADMIN_ID = A.ADMIN_ID;


---SELF JOIN----@
SELECT U.NO_OF_BOOK_ISSUED FROM USERS U JOIN USERS V ON U.LIBRARY_ID = V.LIBRARY_ID;

-------PL/SQL-----LAB-07

--MAX USER ID---@
SET SERVEROUTPUT ON

DECLARE 
    max_user    USERS.LIBRARY_ID%TYPE;
begin
  SELECT MAX(LIBRARY_ID) INTO max_user FROM USERS;
  DBMS_OUTPUT.PUT_LINE('THE MAX USER ID IS: '|| max_user);
end;
/
---'FINDING SYSTEM ANALYSIS AND DESIGN' BOOKS ADMINS PHONE_NO
-- DECLARE 

-- PHONE ADMIN.PHONE_NO%TYPE;
-- begin
--   SELECT PHONE_NO INTO PHONE FROM BOOK_RECORD  
--             JOIN ADMIN ON BOOK_RECORD.ADMIN_ID = ADMIN.ADMIN_ID AND BOOK_RECORD.BOOK_TITLE='System Analysis and Design';

--    DBMS_OUTPUT.PUT_LINE('PHONE: ' || PHONE);
-- end;
-- /

-- ---'COMMISSION ON FINE'
-- SET SERVEROUTPUT ON
-- DECLARE
-- COMMISION ISSUED_BY.FINE%TYPE;
-- TOTAL_FINE ISSUED_BY.FINE%TYPE;
-- BEGIN 
-- SELECT FINE FROM ISSUED_BY WHERE ISSUE_ID = 1807003;
-- IF(FINE>=50) THEN COMMISION = .15;
-- ELSE IF(FINE=>40 && FINE<50) THEN COMMISION := .10;
-- ELSE 
--    COMMISION := .05;
-- DBMS_OUTPUT.PUT_LINE('COMMISION ON FINE:'||TOTAL_FINE+TOTAL_FINE*COMMISION)
-- END;
--  /
 -----'DISPLAYING FIRST 6 TITLES FROM BOOK_RECORD'------
 SET SERVEROUTPUT ON
 DECLARE 
     
     CURSOR CUR IS SELECT BOOK_TITLE,BOOK_AUTHOR FROM BOOK_RECORD;
     var CUR%ROWTYPE;
   begin
     OPEN CUR;
     LOOP
        FETCH CUR INTO var;
       EXIT WHEN CUR%ROWCOUNT>6;
       dbms_output.put_line('TITLE:'||var.BOOK_TITLE||var.BOOK_AUTHOR);
       END LOOP;
        CLOSE CUR;
    END;
/

-----PROCEDURE-----
Set SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE PC IS

    PHO ADMIN.PHONE_NO %TYPE;

    begin
    
      select PHONE_NO into PHO from ADMIN WHERE NAME = 'Iftee';
      DBMS_OUTPUT.PUT_LINE('PH NO:'||PHO);
    end;
    /

    begin
      PC;
    end;
    /
-- Set SERVEROUTPUT ON
-- CREATE OR REPLACE PROCEDURE CP3(A ADMIN.ADMIN_ID NA ADMIN.NAME%TYPE,PHN ADMIN.PHONE_NO%TYPE,CA ADMIN.LOGIN%TYPE) IS
--       begin
--         INSERT INTO ADMIN VALUES(A,NA,PHN,CA);
--         COMMIT;
--       end;
--       /
----FUNCTION------
CREATE OR REPLACE FUNCTION MAX_ISSUE_BOOK RETURN NUMBER IS
MAX_I_B = USERS.NO_OF_BOOK_ISSUED%TYPE;
begin
  SELECT MAX(NO_OF_BOOK_ISSUED) INTO MAX_I_B FROM USERS;
  RETURN MAX_I_B;
end;
/
dbms_output.put_line('')
-----TRigger----
CREATE OR REPLACE TRigger tr BEFORE INSERT OR UPDATE ON LOGIN FOR EACH ROW
DECLARE 

MAX_LOGIN_ID LOGIN.LOGIN_ID%TYPE:= 1900000;
begin
  IF :NEW.LOGIN_ID > MAX_LOGIN_ID THEN 
  raise_application_error(-20000, 'INCORRECT LOGIN ID');
  END IF;
end;
/

INSERT INTO LOGIN VALUES(2100000,'1807003');


-----Trigger for MAX NO of BOOK ISSUE CHECK---

CREATE OR REPLACE TRigger tr2 BEFORE INSERT OR UPDATE ON USERS FOR EACH ROW
DECLARE 

MAX_ISSUE_BOOK USERS.NO_OF_BOOK_ISSUED%TYPE:= 5;
begin
  IF :NEW.NO_OF_BOOK_ISSUED > MAX_ISSUE_BOOK THEN 
  raise_application_error(-20000, 'NOT ALLOW ANY BOOK TO BORROW');
  END IF;
end;
/

INSERT  INTO USERS VALUES(1807002,'IFtee','01721019298','dhaka',6,1807003,1807002);

----Trigger for Fine Checking-----
CREATE OR REPLACE TRigger tr4 BEFORE INSERT OR UPDATE ON ISSUED_BY FOR EACH ROW
DECLARE 

MAX_FINE ISSUED_BY.FINE%TYPE:= 500;
begin
  IF :NEW.FINE > MAX_FINE THEN 
  raise_application_error(-20000, 'PLEASE PAY FIRST');
  END IF;
end;
/

INSERT  INTO ISSUED_BY VALUES(1807002,'123-21-23',1807003,'6/7/22',501,'7/06/22');

